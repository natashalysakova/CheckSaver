@model CheckSaver.Models.InputModels.CheckInputModel

@{
    ViewBag.Title = "Редактировать чек";
}

<script>
    $('.navbar-brand')[0].innerHTML += '@ViewBag.Title';
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Check</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.DateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StoreId, "StoreId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StoreId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StoreId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NeighborId, "NeighborId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("NeighborId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NeighborId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div role="form" class="input_fields_wrap ">

            <div class="form-group col-xs-12">
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Purchases[0].Product.Name)
                </div>
                <div class="col-xs-2">
                    @Html.LabelFor(model => model.Purchases[0].Product.Price)
                </div>
                <div class="col-xs-2">
                    @Html.LabelFor(model => model.Purchases[0].Count)
                </div>
                <div class=" col-xs-5">
                    @Html.LabelFor(model => model.Purchases[0].WhoWillUse)
                </div>
            </div>

            @foreach (var purchase in Model.Purchases)
            {
                Html.RenderPartial("ProductBox", purchase);
            }

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="round-button">
    <div class="add_field_button round-button-circle">+</div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryuobt")
    <script src="~/Scripts/AddFieldsScript.js" type="text/javascript"></script>

    <script>

        $(function () {
            console.log("ready!");
            console.log(autocompleteFirst());
            AddNewFields();

        });
    </script>
}