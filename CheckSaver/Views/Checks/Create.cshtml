@using CheckSaver.Models
@using CheckSaverCore.DataModels
@model CheckSaverCore.DataModels.InputModels.CheckInputModel

@{
    ViewBag.Title = "Создать чек";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-xs-12 col-sm-12 col-md-10 col-lg-8 col-md-offset-1 col-lg-offset-2 card card-big card-big-full-bordered">
        <div class="card-big-title">
            <div class="main-title">Новый чек</div>
            <div class="sub-title">@*Some text here*@</div>

            <div class="dropdown add-neighbours-menu">
                <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu pull-right" aria-labelledby="dropdownMenu1">
                    @foreach (Neighbour item in ViewBag.Names)
                    {
                        if (!item.IsDefault)
                        {
                            <li><a href="#" onclick="SetVisible(@item.Id);"><div class="card-neighbour-photo img-circle small-image" style="background-image: url(@item.Photo);"></div>@*@item.Name*@</a></li>
                        }
                    }
                </ul>
            </div>
        </div>
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="group">
                <input type="text" required>
                <span class="highlight"></span>
                <span class="bar"></span>
                <label>Name</label>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.StoreId, "Магазин", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownList("StoreId", null, htmlAttributes: new { @class = "form-control", name = "Store", onchange = "SetNewProductSource(this.value);" })
                @Html.ValidationMessageFor(model => model.StoreId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NeighborId, "Кто платил", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownList("NeighborId", null, htmlAttributes: new { @class = "form-control", name = "Neighbours" })
                @Html.ValidationMessageFor(model => model.NeighborId, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />

        <div role="form" class="input_fields_wrap">

            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 card card-big">
                <div class="col-xs-3">
                    @Html.Label("Продукт")
                </div>
                <div class="col-xs-2">
                    @Html.Label("Количество / Вес")
                </div>
                <div class="col-xs-2">
                    @Html.Label("Цена")
                </div>
                <div class=" col-xs-5">
                    @Html.Label("Кто использует")
                </div>
            </div>
            @{
                Html.RenderPartial("ProductBox");
            }
        </div>
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="row">
                <hr />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-3 ">
                <input type="submit" value="Создать" class="card-flat-button delete-button" />
                <input type="button" value="Отмена" class="card-flat-button" onclick="location.href='@Url.Action("Index")'" />
            </div>
        </div>

    </div>
                }

<div class="round-button">
    <div class="add_field_button round-button-circle">+</div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryuobt")
    <script src="~/Scripts/AddFieldsScript.js" type="text/javascript"></script>

    <script>
        var users = [];
        $(function () {
            console.log("ready!");
            console.log(autocompleteFirst());
            AddNewFields();

            var classes = $(this).prop('class').match(/cb_/);
            for (var i = 0; i < classes.length; i++) {
                users.push(classes[i].attr('id'));
            }
        });


    </script>
}
