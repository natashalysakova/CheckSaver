@model CheckSaver.Models.Stores

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

    <script type="text/javascript" src="~/Scripts/FileUpload.js"></script>

}

@{
    ViewBag.Title = "Edit";
}

<script>
    $('.navbar-brand')[0].innerHTML += 'Редактирование магазина';
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-xs-12 col-sm-12 col-md-10 col-lg-8 col-md-offset-1 col-lg-offset-2 card card-big card-big-full-bordered">
        <div class="card-big-title">
            <div class="main-title">Редактирование магазина @Model.Title</div>
            <div class="sub-title">Внесите изменения и нажмите кнопку "Сохранить"</div>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.Label("Название", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Адрес", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ссылка на фото", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control", @onChange = "StateStoreImage(this)" } })
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
            <div class="col-xs-12 col-sm-12 col-md-10 col-lg-8 col-md-offset-1 col-lg-offset-2">
                <img id="storePhoto" class="img-responsive img-thumbnail" src="@Url.Content(Model.Photo)" />
            </div>


        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-offset-3 ">
                <input type="submit" value="Сохранить" class="card-flat-button delete-button" />
                <input type="button" value="Отмена" class="card-flat-button" onclick="location.href='@Url.Action("Index", "Stores")'" />
            </div>
        </div>
    </div>
}
